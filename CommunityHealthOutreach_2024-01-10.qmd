---
title: "Community Health Outreach"
subtitle: ""
author: 
  name: "John Ryan Kivela, MA"
  email: "Ryan.Kivela@narbha.org"
  affiliation: "The Alliance ACO"
date: today
date-format: long
format:
  html:
    theme: pulse
    embed-resources: true
    toc: true
    toc-depth: 6
    code-fold: true
    footnotes-hover: true
---

This document provides the data framework for the Community Health Outreach project. The core datasets used in that evaluation are collected through the code herein. 

# Set Up

```{r}
#| label: Setup
#| eval: true
#| include: false
#| echo: false
#| warning: false
#| error: false

## Load Libraries
library(tidyverse)
library(readxl)
library(odbc)
library(stringr)

# Set up ODBC Connection
QRPTP01 <- DBI::dbConnect(odbc::odbc(),"AllianceData")

options(width = 999)

# Create table for inline code
InLineCode <- data.frame(
  Column1 = "text")

# Vector of Alliance Provider Name
Provider_ShortName <- (c("CBI", "CPIH", "EHS", "LCBHC", "MMHC", "SHG", "SBH", "TGC", "WYGC"))

# Vector of NAZ Counties
NAZ_Counties <- (c("Apache", "Coconino", "Mohave", "Navajo", "Yavapai"))

```

```{r}
# Select variables to analyze from the claims data
Claims_filtered <-
  Claims_AllHCA |> 
  select(
    Icnno,
    PrimaryID,
    AHCCCSID,
    Age,
    Age_Group,
    Population,
    RA,
    Svccode,
    BegDate,
    PrimaryDiagnosis,
    ProviderName,
    Fedtaxid,
    RenderingProviderNpi,
    PayContract,
    Placesvc,
    ProviderType,
    Dx1, Dx2, DX3, Dx4, Dx5, DX6,
    Dx7, Dx8, DX9, Dx10, Dx11, DX12,
    Calcnetpd,
    MemberACCGSA,
    MemberServiceArea,
    MemberZipcode,
    RenderingProviderServiceArea,
    MedicationName,
    MedicationGPI,
    MedicationNDC,
    EncounterStatus,
    EncounterStatusDate
  )

# Filter for Alliance Members Only
Claims_AllAlliance <-
  Claims_filtered |> 
  filter(AHCCCSID %in% AllianceEnrolledMembers$AHCCCSID)

# merge the claims data with the enrollment data
Analysis <-
  merge(x = Claims_AllAlliance,
        y = AllianceEnrolledMembers,
        by = "AHCCCSID",
        all.y = TRUE)

# Filter for only adjudicated paid claims
Analysis <- 
  Analysis |> 
  filter(EncounterStatus == "AP")

# Remove some extra variables that we don't need right now
Analysis <- 
  Analysis [, -c(6, 14, 30, 31, 33, 35, 36, 37, 38, 40, 44, 49, 51)]

# Remove any rogues spaces in any field in the data
Analysis <- Analysis |> 
  mutate_all(str_squish)

# Indicaters for services by the HH or not by the HH
Analysis <-
  Analysis |> 
  mutate(SvcByAssignedBHHTIN = if_else(BHHProvider_TIN == Fedtaxid, 1, 0)) |> 
  mutate(SvcByOtherTIN = if_else(BHHProvider_TIN != Fedtaxid, 1, 0))


# check <-
#   Analysis |> 
#   select(
#     AHCCCSID,
#     BHHProvider_TIN,
#     RA,
#     Fedtaxid,
#     ProviderName,
#     SvcByAssignedBHHTIN,
#     SvcByOtherTIN
#   )

```