---
title: "CHO Analysis"
format: html
editor: visual
---

# Setup

```{r}
#| label: Setup
#| eval: true
#| include: false
#| echo: false
#| warning: false
#| error: false

library(tidyverse)
library(lubridate)

```

# Pre-Load Data

```{r}
#| label: Pre-Load Data
#| eval: true
#| include: false
#| echo: false
#| warning: false
#| error: false

Data_CHO_Roster1 <- read.csv("./data/output/CHO_Roster_Final.csv")

ZipCodeDatabase <- read.csv("./documents/ZipCodeDatabase.csv")

```

# Anonymize

```{r}
#| label: Anonymize
#| eval: true
#| include: false
#| echo: false
#| warning: false
#| error: false

# Add random ID
CHO_Roster_Anonymous <-
  Data_CHO_Roster1 |> 
    mutate(RandomID = as.character(sample(0:9, nrow(Data_CHO_Roster1), replace = TRUE)))

# Remove identifiers
CHO_Roster_Anonymous <- CHO_Roster_Anonymous[, -c(1:5)]

# Convert DOB to Age
CHO_Roster_Anonymous <- 
  CHO_Roster_Anonymous %>%
mutate(Age = as.numeric(difftime(Sys.Date(), as.Date(DOB), units = "days") / 365.25))

# Remove DOB and DOD
CHO_Roster_Anonymous <- CHO_Roster_Anonymous[, -c(5, 6)]

# Update County
CHO_Roster_Anonymous <-
  CHO_Roster_Anonymous |> 
  rename(Planet = "ResCountyName") |> 
  mutate(Planet = if_else(Planet == "Apache", "Tatooine",
                    if_else(Planet == "Coconino", "Naboo",
                      if_else(Planet == "Mohave", "Kashyyk",
                        if_else(Planet == "Navajo", "Coruscant",
                          if_else(Planet == "Yavapai", "Kamino", ""))))))

# Remove location data
CHO_Roster_Anonymous <- CHO_Roster_Anonymous[, -c(19,20)]

# CHange BHH Shortname
CHO_Roster_Anonymous <-
  CHO_Roster_Anonymous |> 
  rename(Provider = "BHHShortName") |> 
  mutate(Provider = if_else(Provider == "CBI", "Yoda",
                      if_else(Provider == "EHS", "Yoda",
                      if_else(Provider == "CPIH", "Luke",
                        if_else(Provider == "LCBHC", "Leia",
                          if_else(Provider == "MMHC", "Han",
                            if_else(Provider == "PH", "Chewy",
                              if_else(Provider == "SHG", "Lando",
                                if_else(Provider == "SBHS", "Rey",
                                  if_else(Provider == "TGC", "Kylo","")
                                  )))))))))

# Update TIN
CHO_Roster_Anonymous <- CHO_Roster_Anonymous %>%
  mutate(
    Provider_TIN = substr(as.character(abs(((BHHProvider_TIN * 5) * 7) - BHHProvider_TIN)), 1, 10)
  )

# Remove Provider data
CHO_Roster_Anonymous <- CHO_Roster_Anonymous[, -c(2)]

# UPdate enrollment date
CHO_Roster_Anonymous <- CHO_Roster_Anonymous %>%
  mutate(
    EnrollmentDate = as.Date(EnrollmentDate) + years(2) + months(1) + days(5),
    DisenrollmentDate = as.Date(DisenrollmentDate) + years(2) + months(1) + days(5)
  )

# Remove variables
CHO_Roster_Anonymous <- CHO_Roster_Anonymous[, -c(20:25)]

# reorder variables
CHO_Roster_Anonymous <-
  CHO_Roster_Anonymous |> 
  select(98, 1, 100, 2:3, 97, 20, 99, 4:96)

# Get MA zipcodes
all_massachusetts_zip_codes <- ZipCodeDatabase$zip[ZipCodeDatabase$state == "MA"]

# Convert to character and add leading zeros to make all values 5 digits
all_massachusetts_zip_codes <- sprintf("%05s", as.character(all_massachusetts_zip_codes))

# Randomly assign MA zipcodes

# Define a custom distribution for zip codes
zip_codes <- c(rep("02101", 50), rep("01601", 30), rep("01101", 20), sample(all_massachusetts_zip_codes, 100 - 50 - 30 - 20, replace = TRUE))

# Assuming all_massachusetts_zip_codes is a vector containing all Massachusetts zip codes
# Make sure to replace it with the actual list of Massachusetts zip codes

# Add the zip code column to CHO_Roster_Anonymous
CHO_Roster_Anonymous$ZipCode <- sample(zip_codes, nrow(CHO_Roster_Anonymous), replace = TRUE)

# Reorder variables
CHO_Roster_Anonymous <-
  CHO_Roster_Anonymous |> 
  select(1, 8, 9, 101, 2:7, 10:100)

CHO_Roster_Anonymous <- CHO_Roster_Anonymous[, -c(24:25)]

# Attach counties to zip codes
ZipCodeDatabase_MA <-
  ZipCodeDatabase |> 
  filter(state == "MA") |> 
  select(zip,
         primary_city,
         state,
         county)

# Remove "County" from county
ZipCodeDatabase_MA <- ZipCodeDatabase_MA %>%
  mutate(county = sub(" .*", "", county)) |> 
  rename(ZipCode = "zip")

# Join County Data
CHO_Roster_Anonymous <-
  merge(x = CHO_Roster_Anonymous,
        y = ZipCodeDatabase_MA,
        by = "ZipCode",
        all.x = TRUE)

CHO_Roster_Anonymous <- 
  CHO_Roster_Anonymous |> 
  select(2:4, 100:102, 1, 5:99)
```

```{r}

write.csv(CHO_Roster_Anonymous, "./data/output/DemoData.csv")
```
